---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    # - &OrdererOrg
    - &CojOrderer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        # Name: OrdererOrg
        Name: CojOrderer

        # ID to load the MSP definition as
        # ID: OrdererMSP
        ID: CojOrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        #MSPDir: crypto-config/ordererOrganizations/example.com/msp
        MSPDir: crypto-config/ordererOrganizations/coj.go.th/msp

        # AdminPrincipal dictates the type of principal used for an organization's Admins policy
        # Today, only the values of Role.ADMIN ad Role.MEMBER are accepted, which indicates a principal
        # of role type ADMIN and role type MEMBER respectively
        AdminPrincipal: Role.MEMBER

        # add new Policies
        Policies: &CojOrdererPolicies
            Readers:
                Type: Signature
                Rule: "OR('CojOrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('CojOrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('CojOrdererMSP.admin')"

    # - &Org1
    - &CojEvoting
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        # Name: Org1MSP
        Name: CojEvotingMSP

        # ID to load the MSP definition as
        # ID: Org1MSP
        ID: CojEvotingMSP

        # MSPDir: crypto-config/peerOrganizations/org1.example.com/msp
        MSPDir: crypto-config/peerOrganizations/evoting.coj.go.th/msp

        # AdminPrincipal dictates the type of principal used for an organization's Admins policy
        # Today, only the values of Role.ADMIN ad Role.MEMBER are accepted, which indicates a principal
        # of role type ADMIN and role type MEMBER respectively
        AdminPrincipal: Role.MEMBER

        # Add new Policies
        Policies: &CojEvotingPolicies
            Readers:
                Type: Signature
                Rule: "OR('CojEvotingMSP.admin', 'CojEvotingMSP.peer', 'CojEvotingMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('CojEvotingMSP.admin', 'CojEvotingMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('CojEvotingMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: blockchain-evotingpeer0
              Port: 30110

    # - &Org2
    - &CojEvotingIdemix
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        # Name: Org2MSP
        Name: CojEvotingIdemixMSP

        # ID to load the MSP definition as
        # ID: Org2MSP
        ID: CojEvotingIdemixMSP

        # Add MSPType
        msptype: idemix

        # MSPDir: crypto-config/peerOrganizations/org2.example.com/msp
        # cp ./crypto-config/IssuerPublicKey ./crypto-config/peerOrganizations/idemix.coj.go.th/msp/IssuerPublicKey
        # cp ./crypto-config/RevocationPublicKey ./crypto-config/peerOrganizations/idemix.coj.go.th/msp/RevocationPublicKey
        MSPDir: crypto-config/peerOrganizations/idemix.coj.go.th

        # AdminPrincipal dictates the type of principal used for an organization's Admins policy
        # Today, only the values of Role.ADMIN ad Role.MEMBER are accepted, which indicates a principal
        # of role type ADMIN and role type MEMBER respectively
        AdminPrincipal: Role.MEMBER

        # Add new Policies
        Policies: &CojEvotingIdemixPolicies
            Readers:
                Type: Signature
                Rule: "OR('CojEvotingIdemixMSP.admin', 'CojEvotingIdemixMSP.peer', 'CojEvotingIdemixMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('CojEvotingIdemixMSP.admin', 'CojEvotingIdemixMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('CojEvotingIdemixMSP.admin')"

    #     AnchorPeers:
    #         # AnchorPeers defines the location of peers which can be used
    #         # for cross org gossip communication.  Note, this value is only
    #         # encoded in the genesis block in the Application section context
    #         - Host: blockchain-org2peer1
    #           Port: 30210

    # - &Org3
    #     # DefaultOrg defines the organization which is used in the sampleconfig
    #     # of the fabric.git development environment
    #     Name: Org3MSP

    #     # ID to load the MSP definition as
    #     ID: Org3MSP

    #     MSPDir: crypto-config/peerOrganizations/org3.example.com/msp

    #     # AdminPrincipal dictates the type of principal used for an organization's Admins policy
    #     # Today, only the values of Role.ADMIN ad Role.MEMBER are accepted, which indicates a principal
    #     # of role type ADMIN and role type MEMBER respectively
    #     AdminPrincipal: Role.MEMBER

    #     AnchorPeers:
    #         # AnchorPeers defines the location of peers which can be used
    #         # for cross org gossip communication.  Note, this value is only
    #         # encoded in the genesis block in the Application section context
    #         - Host: blockchain-org3peer1
    #           Port: 30310

    # - &Org4
    #     # DefaultOrg defines the organization which is used in the sampleconfig
    #     # of the fabric.git development environment
    #     Name: Org4MSP

    #     # ID to load the MSP definition as
    #     ID: Org4MSP

    #     MSPDir: crypto-config/peerOrganizations/org4.example.com/msp

    #     # AdminPrincipal dictates the type of principal used for an organization's Admins policy
    #     # Today, only the values of Role.ADMIN ad Role.MEMBER are accepted, which indicates a principal
    #     # of role type ADMIN and role type MEMBER respectively
    #     AdminPrincipal: Role.MEMBER

    #     AnchorPeers:
    #         # AnchorPeers defines the location of peers which can be used
    #         # for cross org gossip communication.  Note, this value is only
    #         # encoded in the genesis block in the Application section context
    #         - Host: blockchain-org4peer1
    #           Port: 30410

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
        # supported by both.
        # Set the value of the capability to true to require it.
        Channel: &ChannelCapabilities
            # V1.4.3 for Channel is a catchall flag for behavior which has been
            # determined to be desired for all orderers and peers running at the v1.4.3
            # level, but which would be incompatible with orderers and peers from
            # prior releases.
            # Prior to enabling V1.4.3 channel capabilities, ensure that all
            # orderers and peers on a channel are at v1.4.3 or later.
            V1_4_3: true
            # V1.3 for Channel enables the new non-backwards compatible
            # features and fixes of fabric v1.3
            V1_3: false
            # V1.1 for Channel enables the new non-backwards compatible
            # features and fixes of fabric v1.1
            V1_1: false
    
        # Orderer capabilities apply only to the orderers, and may be safely
        # used with prior release peers.
        # Set the value of the capability to true to require it.
        Orderer: &OrdererCapabilities
            # V1.4.2 for Orderer is a catchall flag for behavior which has been
            # determined to be desired for all orderers running at the v1.4.2
            # level, but which would be incompatible with orderers from prior releases.
            # Prior to enabling V1.4.2 orderer capabilities, ensure that all
            # orderers on a channel are at v1.4.2 or later.
            V1_4_2: true
            # V1.1 for Orderer enables the new non-backwards compatible
            # features and fixes of fabric v1.1
            V1_1: false
    
        # Application capabilities apply only to the peer network, and may be safely
        # used with prior release orderers.
        # Set the value of the capability to true to require it.
        Application: &ApplicationCapabilities
            # V1.4.2 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.4.2.
            V1_4_2: true
            # V1.3 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.3.
            V1_3: false
            # V1.2 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.2 (note, this need not be set if
            # later version capabilities are set)
            V1_2: false
            # V1.1 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.1 (note, this need not be set if
            # later version capabilities are set).
            V1_1: false
    
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - blockchain-orderer0:31010

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:
    
    # Add new Policies
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Add new Policies
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Add new Capabilities
    Capabilities:
        <<: *ApplicationCapabilities

################################################################################
#
#   SECTION: Channel
#
################################################################################
Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ChannelCapabilities
    
################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################

Profiles:
    SoloOrgsOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *CojOrderer
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *CojEvoting
                    - *CojEvotingIdemix

    SoloOrgsChannel:
        Consortium: SampleConsortium
        # <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *CojEvoting
                - *CojEvotingIdemix
            Capabilities:
                <<: *ApplicationCapabilities
    
    SoloOrgsEtcdRaftOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            Capabilities:
                <<: *OrdererCapabilities
            # EtcdRaft defines configuration which must be set when the "etcdraft"
            # orderertype is chosen.
            EtcdRaft:
                # The set of Raft replicas for this network. For the etcd/raft-based
                # implementation, we expect every replica to also be an OSN. Therefore,
                # a subset of the host:port items enumerated in this list should be
                # replicated under the Orderer.Addresses key above.
                Consenters:
                    - Host: blockchain-orderer0
                      Port: 31010
                      ClientTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer0.coj.go.th/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer0.coj.go.th/tls/server.crt
                    - Host: blockchain-orderer1
                      Port: 31010
                      ClientTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer1.coj.go.th/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer1.coj.go.th/tls/server.crt
                    - Host: blockchain-orderer2
                      Port: 31010
                      ClientTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer2.coj.go.th/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer2.coj.go.th/tls/server.crt
                    - Host: blockchain-orderer3
                      Port: 31010
                      ClientTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer3.coj.go.th/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer3.coj.go.th/tls/server.crt
                    - Host: blockchain-orderer4
                      Port: 31010
                      ClientTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer4.coj.go.th/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/coj.go.th/orderers/orderer4.coj.go.th/tls/server.crt

            Organizations:
                - <<: *CojOrderer
                  Policies:
                      <<: *CojOrdererPolicies
                      Admins:
                          Type: Signature
                          Rule: "OR('CojEvotingMSP.member')"
    
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - <<: *CojEvoting
                  Policies:
                      <<: *CojEvotingPolicies
                      Admins:
                          Type: Signature
                          Rule: "OR('CojEvotingMSP.member')"
    
        Consortiums:
            SampleConsortium:
                Organizations:
                    - <<: *CojEvoting
                      Policies:
                          <<: *CojEvotingPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('CojEvotingMSP.member')"
                    - <<: *CojEvotingIdemix
                      Policies:
                          <<: *CojEvotingIdemixPolicies
                          Admins:
                              Type: Signature
                              Rule: "OR('CojEvotingIdemixMSP.member')"
    